[{"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/index.js":"1","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/App.js":"2","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reportWebVitals.js":"3","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/store.js":"4","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/Login.js":"5","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/Navbar.js":"6","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/FileUpload.js":"7","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/Register.js":"8","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/DisplayImage.js":"9","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/actions/auth.js":"10","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/actions/upload.js":"11","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/route/PrivateRoute.js":"12","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/actions/types.js":"13","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reducers/auth.js":"14","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/utils/setAuthToken.js":"15","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reducers/index.js":"16","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reducers/upload.js":"17"},{"size":500,"mtime":1608238511843,"results":"18","hashOfConfig":"19"},{"size":1513,"mtime":1608393155198,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608238511846,"results":"21","hashOfConfig":"19"},{"size":432,"mtime":1608327685019,"results":"22","hashOfConfig":"19"},{"size":1682,"mtime":1608378232612,"results":"23","hashOfConfig":"19"},{"size":3392,"mtime":1608391579449,"results":"24","hashOfConfig":"19"},{"size":2021,"mtime":1608393147697,"results":"25","hashOfConfig":"19"},{"size":1832,"mtime":1608380062907,"results":"26","hashOfConfig":"19"},{"size":681,"mtime":1608401417924,"results":"27","hashOfConfig":"19"},{"size":2292,"mtime":1608392139224,"results":"28","hashOfConfig":"19"},{"size":813,"mtime":1608390296075,"results":"29","hashOfConfig":"19"},{"size":620,"mtime":1608376226483,"results":"30","hashOfConfig":"19"},{"size":450,"mtime":1608388542804,"results":"31","hashOfConfig":"19"},{"size":1179,"mtime":1608391811859,"results":"32","hashOfConfig":"19"},{"size":255,"mtime":1606547708996,"results":"33","hashOfConfig":"19"},{"size":153,"mtime":1608383223659,"results":"34","hashOfConfig":"19"},{"size":687,"mtime":1608392536838,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1u10ofi",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/index.js",[],["77","78"],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/App.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reportWebVitals.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/store.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/Login.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/Navbar.js",["79","80"],"import React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { logout } from '../actions/auth'\nimport { connect } from 'react-redux'\nimport './Navbar.css';\n\nfunction Navbar({auth:{isAuthenticated, loading}, logout}) {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const showButton = () => {\n        if (window.innerWidth <= 960) {\n        setButton(false);\n        } else {\n        setButton(true);\n        }\n    };\n\n    const guestLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <Link to='/register' className='nav-links' onClick={closeMobileMenu} style={{ textDecoration: 'none' }}>\n                    Register\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link\n                    to='/login'\n                    className='nav-links'\n                    style={{ textDecoration: 'none' }}\n                    onClick={closeMobileMenu}\n                >\n                Login\n                </Link>\n            </li>\n        </Fragment>\n    )\n\n    const authLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <Link\n                    to='/upload'\n                    className='nav-links'\n                    style={{ textDecoration: 'none' }}\n                    onClick={closeMobileMenu}\n                >\n                Upload\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link\n                    to='/display'\n                    className='nav-links'\n                    style={{ textDecoration: 'none' }}\n                    onClick={() => {\n                        closeMobileMenu()\n                    }}\n                >\n                Uploaded Pic\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <a\n                    className='nav-links'\n                    style={{ textDecoration: 'none' }}\n                    onClick={() => {\n                        closeMobileMenu()\n                        logout()\n                    }}\n                >\n                Logout\n                </a>\n            </li>\n        </Fragment>\n    )\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton);\n\n    return (\n        <>\n            <nav className='navbar'>\n                <div className='navbar-container'>\n                <div className='navbar-logo' onClick={closeMobileMenu}>\n                    MRay\n                </div>\n                <div className='menu-icon' onClick={handleClick}>\n                    <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n                </div>\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                    {!loading&&(<Fragment>{isAuthenticated?authLinks:guestLinks}</Fragment>)}\n                </ul>\n                </div>\n            </nav>\n        </>\n    );\n}\n\nconst mapStateToProp = state => ({\n    auth: state.auth\n})\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nexport default connect(mapStateToProp ,{logout})(Navbar);\n","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/FileUpload.js",["81"],"import React, { Fragment, useState } from 'react';\nimport { uploadImage } from '../actions/upload'\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport './Login.css';\n\nconst FileUpload = ({imguri, uploadImage}) => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  \n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('filename', filename);\n    // console.log(file);\n    uploadImage(formData)\n  };\n\n  if(imguri !== null) {\n    return <Redirect to='/uploadedpic'/>\n  }\n\n  return (\n    <Fragment>\n        <form onSubmit={onSubmit} className=\"formLabel\">\n            <div className='custom-file mb-4'>\n            <input\n                type='file'\n                className='custom-file-input'\n                id='customFile'\n                onChange={onChange}\n            />\n            <label className='custom-file-label' htmlFor='customFile'>\n                {filename}\n            </label>\n            </div>\n\n        \n            <input\n            type='submit'\n            value='Upload'\n            className='btn btn-primary btn-block mt-4'\n            />\n        </form>\n        {uploadedFile ? (\n            <div className='row mt-5'>\n            <div className='col-md-6 m-auto'>\n                <h3 className='text-center'>{uploadedFile.fileName}</h3>\n                <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n            </div>\n            </div>\n        ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProp = state => ({\n    imguri: state.upload.imguri\n})\n\nFileUpload.propTypes = {\n    uploadImage: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProp, {uploadImage})(FileUpload);","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/Register.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/DisplayImage.js",["82","83","84"],"import React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { loadImage } from '../actions/upload'\nimport PropTypes from 'prop-types'\nimport './displayImage.css'\n\nfunction DisplayImage({loadImage, imguri}) {\n    const imgURI = 'http://mrugankray3.pythonanywhere.com/static/images/'+`${imguri}`\n    return (\n        <Fragment>\n            <main>\n                <img src={imgURI}></img>\n            </main>\n        </Fragment>\n    )\n}\n\nconst mapStateToProp = state => ({\n    imguri : state.upload.imguri\n})\n\nDisplayImage.propTypes = {\n    loadImage: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProp, {loadImage})(DisplayImage)\n","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/actions/auth.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/actions/upload.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/components/route/PrivateRoute.js",["85"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport auth from '../../reducers/auth'\n\nconst PrivateRoute = ({ component: Component, auth: {isAuthenticated, loading}, ...rest }) => {\n    return (\n        <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login' />):(<Component {...props}/>)} />\n    )\n}\n\nPrivateRoute.prototype = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProp = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProp)(PrivateRoute)\n","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/actions/types.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reducers/auth.js",["86"],"import { REGISTER_SUCCESS, REGISTER_FAIL, TOKEN_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT } from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    loading: true,\n    isAuthenticated: false\n}\n\nexport default (state=initialState, action) => {\n    const { type, payload } = action\n\n    switch(type) {\n        case TOKEN_LOADED:\n            return {\n                ...state,\n                token: payload,\n                isAuthenticated: true,\n                loading: false,\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.msg)\n            return {\n                ...state,\n                token: payload.msg,\n                isAuthenticated : true,\n                loading: false\n            }\n        case AUTH_ERROR:\n        case REGISTER_FAIL:\n        case LOGIN_ERROR: \n        case LOGOUT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state\n    }\n}","/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/utils/setAuthToken.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reducers/index.js",[],"/media/mrugank/626CB0316CB002391/for development purpose only/python/inspektlabs/inspektlabs/client/src/reducers/upload.js",["87"],"import { IMGURI, UPLOAD_ERROR, LOAD_IMAGE, ERR_LOAD_IMG, LOGOUT } from '../actions/types'\n\nconst initialState = {\n    imguri: null\n}\n\nexport default (state=initialState, actions) => {\n    const {type, payload} = actions\n\n    switch(type) {\n        case LOAD_IMAGE:\n        case IMGURI:\n            return {\n                ...state,\n                imguri: payload.msg\n            }\n        case ERR_LOAD_IMG:\n        case UPLOAD_ERROR:\n            return {\n                ...state,\n                imguri: null\n            }\n        case LOGOUT:\n            return {\n                ...state,\n                imguri: null\n            }\n        default:\n            return state\n    }\n}",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":10,"column":12,"nodeType":"94","messageId":"95","endLine":10,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":68,"column":17,"nodeType":"98","endLine":75,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":11,"column":24,"nodeType":"94","messageId":"95","endLine":11,"endColumn":39},{"ruleId":"92","severity":1,"message":"100","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":8,"column":74,"nodeType":"103","messageId":"104","endLine":8,"endColumn":75},{"ruleId":"105","severity":1,"message":"106","line":12,"column":17,"nodeType":"98","endLine":12,"endColumn":35},{"ruleId":"92","severity":1,"message":"107","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":12},{"ruleId":"108","severity":1,"message":"109","line":9,"column":1,"nodeType":"110","endLine":43,"endColumn":2},{"ruleId":"108","severity":1,"message":"109","line":7,"column":1,"nodeType":"110","endLine":31,"endColumn":2},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'button' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setUploadedFile' is assigned a value but never used.","'useEffect' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'auth' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]